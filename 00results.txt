
 iteration => 220 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 215 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 210 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 205 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 200 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 195 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 190 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 185 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 180 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 175 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 170 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 165 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 160 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 155 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 150 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 145 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 140 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 135 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 130 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 125 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 120 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 115 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 110 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 105 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 100 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 95 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 90 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 85 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 80 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 75 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 70 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 65 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 60 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 55 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 50 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 45 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 40 
 best cost => 2.1131904087656403 
 best position => [2, 9, -6, 23, -13, -4, -17, -27, -15, -14, 34, 3, 29, -30, -3, -3, -28, 42, -23, -14, -10, -16, -3, -3, -21, 33, -4, -24, -6, -29, -35, -8, -20, 34, -31, 34, -2, -15, -27, -15] 
 best function => 20.60315509818824 

 iteration => 35 
 best cost => 2.19523636725087 
 best position => [7, 39, -4, 22, -28, 4, -42, 7, 50, -5, 44, -5, 40, 0, 22, -4, 5, 20, -43, 10, -48, -12, 9, -51, -46, 21, -43, -53, -37, -11, -8, -5, -52, 34, -48, 41, 22, -42, -46, -17] 
 best function => 20.904544960366874 

 iteration => 30 
 best cost => 2.19523636725087 
 best position => [7, 39, -4, 22, -28, 4, -42, 7, 50, -5, 44, -5, 40, 0, 22, -4, 5, 20, -43, 10, -48, -12, 9, -51, -46, 21, -43, -53, -37, -11, -8, -5, -52, 34, -48, 41, 22, -42, -46, -17] 
 best function => 20.904544960366874 

 iteration => 25 
 best cost => 5.791753151778413 
 best position => [4, 34, -19, 8, -52, 33, -23, 10, 40, -24, 52, -17, 34, 5, 22, -2, 6, -39, 4, -1, -36, -8, -5, -13, -5, 22, -53, -42, -44, -35, -42, -6, -31, 23, -34, 35, 7, -37, -35, -3] 
 best function => 1230.27*x_0 - 193.59 

 iteration => 20 
 best cost => 5.791753151778413 
 best position => [4, 34, -19, 8, -52, 33, -23, 10, 40, -24, 52, -17, 34, 5, 22, -2, 6, -39, 4, -1, -36, -8, -5, -13, -5, 22, -53, -42, -44, -35, -42, -6, -31, 23, -34, 35, 7, -37, -35, -3] 
 best function => 1230.27*x_0 - 193.59 

 iteration => 15 
 best cost => 5.791753151778413 
 best position => [4, 34, -19, 8, -52, 33, -23, 10, 40, -24, 52, -17, 34, 5, 22, -2, 6, -39, 4, -1, -36, -8, -5, -13, -5, 22, -53, -42, -44, -35, -42, -6, -31, 23, -34, 35, 7, -37, -35, -3] 
 best function => 1230.27*x_0 - 193.59 

 iteration => 10 
 best cost => 5.791753151778413 
 best position => [4, 34, -19, 8, -52, 33, -23, 10, 40, -24, 52, -17, 34, 5, 22, -2, 6, -39, 4, -1, -36, -8, -5, -13, -5, 22, -53, -42, -44, -35, -42, -6, -31, 23, -34, 35, 7, -37, -35, -3] 
 best function => 1230.27*x_0 - 193.59 

 iteration => 5 
 best cost => 5.791753151778413 
 best position => [4, 34, -19, 8, -52, 33, -23, 10, 40, -24, 52, -17, 34, 5, 22, -2, 6, -39, 4, -1, -36, -8, -5, -13, -5, 22, -53, -42, -44, -35, -42, -6, -31, 23, -34, 35, 7, -37, -35, -3] 
 best function => 1230.27*x_0 - 193.59 

 iteration => 0 
 best cost => 4381.614877340553 
 best position => [-24, 6, 9, 1, -42, 29, -16, 5, 37, 7, 39, -4, 40, -29, 32, -24, 27, -35, -45, -45, -40, -5, -2, -28, -32, 32, -47, -44, -17, -39, 33, -22, -26, -2, -43, 42, 5, -30, -42, -33] 
 best function => 9757.05 
