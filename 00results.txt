
 iteration => 1110 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1105 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1100 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1095 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1090 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1085 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1080 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1075 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1070 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1065 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1060 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1055 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1050 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1045 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1040 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1035 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1030 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1025 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1020 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1015 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1010 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1005 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 1000 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 995 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 990 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 985 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 980 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 975 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 970 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 965 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 960 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 955 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 950 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 945 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 940 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 935 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 930 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 925 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 920 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 915 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 910 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 905 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 900 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 895 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 890 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 885 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 880 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 875 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 870 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 865 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 860 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 855 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 850 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 845 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 840 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 835 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 830 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 825 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 820 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 815 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 810 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 805 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 800 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 795 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 790 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 785 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 780 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 775 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 770 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 765 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 760 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 755 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 750 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 745 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 740 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 735 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 730 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 725 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 720 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 715 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 710 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 705 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 700 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 695 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 690 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 685 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 680 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 675 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 670 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 665 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 660 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 655 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 650 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 645 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 640 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 635 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 630 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 625 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 620 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 615 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 610 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 605 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 600 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 595 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 590 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 585 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 580 
 best cost => 10.83740258364506 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -10, 9, -10, -12, -11, 10, 2, -3, -13, 4, -11, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.0923412738875 - 0.000153095280378696*x_1 

 iteration => 575 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 570 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 565 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 560 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 555 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 550 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 545 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 540 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 535 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 530 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 525 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 520 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 515 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 510 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 505 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 500 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 495 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 490 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 485 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 480 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 475 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 470 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 465 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 460 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 455 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 450 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 445 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 440 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 435 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 430 
 best cost => 10.931648886912116 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 8, -10, -12, -11, 12, 2, -2, -13, 4, -12, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.9671389346555 - 0.000155002472289433*x_1 

 iteration => 425 
 best cost => 11.206344271188403 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 7, -12, 6, -10, -9, -11, 12, 1, -4, -11, 2, -10, 10, -15, 14, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.3013652498238 - 0.000156566558009475*x_1 

 iteration => 420 
 best cost => 11.206344271188403 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 7, -12, 6, -10, -9, -11, 12, 1, -4, -11, 2, -10, 10, -15, 14, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.3013652498238 - 0.000156566558009475*x_1 

 iteration => 415 
 best cost => 11.206344271188403 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 7, -12, 6, -10, -9, -11, 12, 1, -4, -11, 2, -10, 10, -15, 14, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.3013652498238 - 0.000156566558009475*x_1 

 iteration => 410 
 best cost => 11.206344271188403 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 7, -12, 6, -10, -9, -11, 12, 1, -4, -11, 2, -10, 10, -15, 14, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.3013652498238 - 0.000156566558009475*x_1 

 iteration => 405 
 best cost => 11.206344271188403 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 7, -12, 6, -10, -9, -11, 12, 1, -4, -11, 2, -10, 10, -15, 14, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.3013652498238 - 0.000156566558009475*x_1 

 iteration => 400 
 best cost => 11.206344271188403 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 7, -12, 6, -10, -9, -11, 12, 1, -4, -11, 2, -10, 10, -15, 14, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.3013652498238 - 0.000156566558009475*x_1 

 iteration => 395 
 best cost => 11.206344271188403 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 7, -12, 6, -10, -9, -11, 12, 1, -4, -11, 2, -10, 10, -15, 14, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.3013652498238 - 0.000156566558009475*x_1 

 iteration => 390 
 best cost => 11.206344271188403 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 7, -12, 6, -10, -9, -11, 12, 1, -4, -11, 2, -10, 10, -15, 14, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 20.3013652498238 - 0.000156566558009475*x_1 

 iteration => 385 
 best cost => 14.549848959714604 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 6, -12, 6, -10, -9, -11, 13, 0, -4, -10, 8, 0, 10, -14, 13, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.1560200097699 - 0.000156972317931733*x_1 

 iteration => 380 
 best cost => 14.549848959714604 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 6, -12, 6, -10, -9, -11, 13, 0, -4, -10, 8, 0, 10, -14, 13, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.1560200097699 - 0.000156972317931733*x_1 

 iteration => 375 
 best cost => 14.549848959714604 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 6, -12, 6, -10, -9, -11, 13, 0, -4, -10, 8, 0, 10, -14, 13, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.1560200097699 - 0.000156972317931733*x_1 

 iteration => 370 
 best cost => 14.549848959714604 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 6, -12, 6, -10, -9, -11, 13, 0, -4, -10, 8, 0, 10, -14, 13, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.1560200097699 - 0.000156972317931733*x_1 

 iteration => 365 
 best cost => 14.549848959714604 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 6, -12, 6, -10, -9, -11, 13, 0, -4, -10, 8, 0, 10, -14, 13, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.1560200097699 - 0.000156972317931733*x_1 

 iteration => 360 
 best cost => 14.549848959714604 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 6, -12, 6, -10, -9, -11, 13, 0, -4, -10, 8, 0, 10, -14, 13, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.1560200097699 - 0.000156972317931733*x_1 

 iteration => 355 
 best cost => 14.549848959714604 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 6, -12, 6, -10, -9, -11, 13, 0, -4, -10, 8, 0, 10, -14, 13, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.1560200097699 - 0.000156972317931733*x_1 

 iteration => 350 
 best cost => 14.549848959714604 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 6, -12, 6, -10, -9, -11, 13, 0, -4, -10, 8, 0, 10, -14, 13, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.1560200097699 - 0.000156972317931733*x_1 

 iteration => 345 
 best cost => 14.549848959714604 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 6, -12, 6, -10, -9, -11, 13, 0, -4, -10, 8, 0, 10, -14, 13, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 19.1560200097699 - 0.000156972317931733*x_1 

 iteration => 340 
 best cost => 20.553876207677817 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 6, -12, 6, -9, -10, -11, 12, 3, -3, -10, 7, -11, 11, -14, 14, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 23.2588650771932 - 0.000150534850323198*x_1 

 iteration => 335 
 best cost => 22.113705264288054 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 7, -13, 5, -10, -11, -10, 12, 5, -1, -10, 7, -13, 11, -14, 13, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 23.6843862961723 - 0.000166686391222961*x_1 

 iteration => 330 
 best cost => 28.61620051966241 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 7, -12, 10, -9, -11, -11, 12, 6, -2, -10, 6, -14, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 16.0026481397759 - 0.000154165632472215*x_1 

 iteration => 325 
 best cost => 28.61620051966241 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 7, -12, 10, -9, -11, -11, 12, 6, -2, -10, 6, -14, 11, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 16.0026481397759 - 0.000154165632472215*x_1 

 iteration => 320 
 best cost => 40.85609313541395 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 10, -10, 10, -10, -11, -11, 11, 3, -1, -13, 7, -12, 11, -12, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 13.2587390585011 - 0.000155120047404686*x_1 

 iteration => 315 
 best cost => 49.867600793683586 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -12, 11, -10, -8, -11, 12, 4, -7, -13, 7, -12, 10, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 11.2385616716552 - 0.000154909548314739*x_1 

 iteration => 310 
 best cost => 90.28659715877737 
 best position => [-3, -10, 12, 15, 1, 14, 3, 6, 9, 6, -12, 7, -1, -16, -13, 8, -12, 12, -10, -12, -11, 14, 4, 6, -14, 7, -14, 10, -14, 15, -7, 5, 4, -4, -3, 5, -8, 0, 7, -6, 9, -13, 1, -9, 10, 12, -6, -10, 10, 15, 5, -7, -5, -3, -6, -2, -10, -7, -6, -9] 
 best function => 2.17752661881604 - 0.000154200577943766*x_1 

 iteration => 305 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 300 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 295 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 290 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 285 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 280 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 275 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 270 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 265 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 260 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 255 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 250 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 245 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 240 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 235 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 230 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 225 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 220 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 215 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 210 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 205 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 200 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 195 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 190 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 185 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 180 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 175 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 170 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 165 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 160 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 155 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 150 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 145 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 140 
 best cost => 96.29859796075795 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 12, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635656747338*7918.61**x_1 - 1.0 

 iteration => 135 
 best cost => 96.82307525263944 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 7, -9, -9, -11, 14, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635835287125*7918.54**x_1 - 1.0 

 iteration => 130 
 best cost => 96.82307525263944 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 7, -9, -9, -11, 14, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635835287125*7918.54**x_1 - 1.0 

 iteration => 125 
 best cost => 96.82307525263944 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 7, -9, -9, -11, 14, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635835287125*7918.54**x_1 - 1.0 

 iteration => 120 
 best cost => 96.82307525263944 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 7, -9, -9, -11, 14, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635835287125*7918.54**x_1 - 1.0 

 iteration => 115 
 best cost => 96.82703742802813 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 11, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635773632093*7918.62**x_1 - 1.0 

 iteration => 110 
 best cost => 96.82703742802813 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 11, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635773632093*7918.62**x_1 - 1.0 

 iteration => 105 
 best cost => 96.82703742802813 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 11, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635773632093*7918.62**x_1 - 1.0 

 iteration => 100 
 best cost => 96.82703742802813 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 11, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635773632093*7918.62**x_1 - 1.0 

 iteration => 95 
 best cost => 96.82703742802813 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 11, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635773632093*7918.62**x_1 - 1.0 

 iteration => 90 
 best cost => 96.82703742802813 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 11, -9, -9, -11, 13, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635773632093*7918.62**x_1 - 1.0 

 iteration => 85 
 best cost => 96.83060147050317 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 14, -10, -9, -11, 14, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635752827244*7918.64**x_1 - 1.0 

 iteration => 80 
 best cost => 96.83060147050317 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 14, -10, -9, -11, 14, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15635752827244*7918.64**x_1 - 1.0 

 iteration => 75 
 best cost => 97.31380570527905 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 1, -9, -9, -11, 14, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15637142561515*7918.27**x_1 - 1.0 

 iteration => 70 
 best cost => 97.31380570527905 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 1, -9, -9, -11, 14, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15637142561515*7918.27**x_1 - 1.0 

 iteration => 65 
 best cost => 97.80763284308935 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -14, 2, -9, -9, -11, 14, 4, -2, -10, 8, -10, 13, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15641706816216*7918.41**x_1 - 1.0 

 iteration => 60 
 best cost => 97.81268402161729 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -12, 5, -10, -9, -10, 13, 4, -2, -10, 7, -10, 14, -13, 15, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.1564636334614*7910.3**x_1 - 1.0 

 iteration => 55 
 best cost => 98.19459888234124 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -13, 7, -16, -9, -10, -1, 3, -3, -11, 9, -12, 12, -13, 5, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15591579144828*8066.0**x_1 - 1.0 

 iteration => 50 
 best cost => 98.7874998130874 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -8, 4, -9, -9, -15, 15, 3, -2, -10, 4, 4, 14, -13, 12, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.15345702435581*7926.67**x_1 - 1.0 

 iteration => 45 
 best cost => 98.94090633182309 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -9, 4, -8, -9, -11, 2, 3, -1, -10, 3, 7, 13, -13, 7, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.18392199114523*7664.07**x_1 - 1.0 

 iteration => 40 
 best cost => 99.05028028015185 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 7, -9, 2, -11, -9, -15, 10, 4, -7, -14, 5, 2, 14, -13, 9, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.13930470803178*8058.01**x_1 - 1.0 

 iteration => 35 
 best cost => 99.19917619103248 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 6, -7, 10, -15, -9, -15, 1, 2, -12, -15, 5, 1, 15, -14, 9, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 1.20444230683085*8691.17**x_1 - 1.0 

 iteration => 30 
 best cost => 100.0 
 best position => [12, -13, 10, -1, -2, 15, -7, -8, 11, 13, -4, 10, 2, -16, 14, 1, -11, 6, -10, -6, -15, 3, 1, -4, -13, 7, -6, 9, -14, 9, -11, 11, 14, 3, -11, 4, 9, 0, 15, 5, 15, -9, 16, -5, 15, 12, 3, 2, 16, 14, 2, -10, -10, -5, 4, -6, -1, -3, 5, -9] 
 best function => 3.31553693521881*8464.1**x_1 - 1.0 

 iteration => 25 
 best cost => 15000 
 best position => [11, -3, 0, 9, -1, 13, -7, 3, 13, 9, -7, 12, -1, -3, 13, -1, -8, 1, 7, 10, -16, 11, -6, -10, -9, 9, -14, 0, -13, 6, 10, 14, 2, 3, 2, -10, 3, -1, 8, 13, 12, 1, 6, 9, 12, 14, -2, 15, 9, 3, 4, -9, -13, 9, 10, -12, -15, 13, 5, 4] 
 best function => error(2) : /np.tan(x_1 6496.9-9977.144131.23-7818.84**4394.09-6178.66np.exp(+-5227.68**x_1 158.81np.tan(-459.8np.exp(973.99)))) 

 iteration => 20 
 best cost => 15000 
 best position => [11, -3, 0, 9, -1, 13, -7, 3, 13, 9, -7, 12, -1, -3, 13, -1, -8, 1, 7, 10, -16, 11, -6, -10, -9, 9, -14, 0, -13, 6, 10, 14, 2, 3, 2, -10, 3, -1, 8, 13, 12, 1, 6, 9, 12, 14, -2, 15, 9, 3, 4, -9, -13, 9, 10, -12, -15, 13, 5, 4] 
 best function => error(2) : /np.tan(x_1 6496.9-9977.144131.23-7818.84**4394.09-6178.66np.exp(+-5227.68**x_1 158.81np.tan(-459.8np.exp(973.99)))) 

 iteration => 15 
 best cost => 15000 
 best position => [11, -3, 0, 9, -1, 13, -7, 3, 13, 9, -7, 12, -1, -3, 13, -1, -8, 1, 7, 10, -16, 11, -6, -10, -9, 9, -14, 0, -13, 6, 10, 14, 2, 3, 2, -10, 3, -1, 8, 13, 12, 1, 6, 9, 12, 14, -2, 15, 9, 3, 4, -9, -13, 9, 10, -12, -15, 13, 5, 4] 
 best function => error(2) : /np.tan(x_1 6496.9-9977.144131.23-7818.84**4394.09-6178.66np.exp(+-5227.68**x_1 158.81np.tan(-459.8np.exp(973.99)))) 

 iteration => 10 
 best cost => 15000 
 best position => [11, -3, 0, 9, -1, 13, -7, 3, 13, 9, -7, 12, -1, -3, 13, -1, -8, 1, 7, 10, -16, 11, -6, -10, -9, 9, -14, 0, -13, 6, 10, 14, 2, 3, 2, -10, 3, -1, 8, 13, 12, 1, 6, 9, 12, 14, -2, 15, 9, 3, 4, -9, -13, 9, 10, -12, -15, 13, 5, 4] 
 best function => error(2) : /np.tan(x_1 6496.9-9977.144131.23-7818.84**4394.09-6178.66np.exp(+-5227.68**x_1 158.81np.tan(-459.8np.exp(973.99)))) 

 iteration => 5 
 best cost => 15000 
 best position => [11, -3, 0, 9, -1, 13, -7, 3, 13, 9, -7, 12, -1, -3, 13, -1, -8, 1, 7, 10, -16, 11, -6, -10, -9, 9, -14, 0, -13, 6, 10, 14, 2, 3, 2, -10, 3, -1, 8, 13, 12, 1, 6, 9, 12, 14, -2, 15, 9, 3, 4, -9, -13, 9, 10, -12, -15, 13, 5, 4] 
 best function => error(2) : /np.tan(x_1 6496.9-9977.144131.23-7818.84**4394.09-6178.66np.exp(+-5227.68**x_1 158.81np.tan(-459.8np.exp(973.99)))) 

 iteration => 0 
 best cost => 15000 
 best position => [11, -3, 0, 9, -1, 13, -7, 3, 13, 9, -7, 12, -1, -3, 13, -1, -8, 1, 7, 10, -16, 11, -6, -10, -9, 9, -14, 0, -13, 6, 10, 14, 2, 3, 2, -10, 3, -1, 8, 13, 12, 1, 6, 9, 12, 14, -2, 15, 9, 3, 4, -9, -13, 9, 10, -12, -15, 13, 5, 4] 
 best function => error(2) : /np.tan(x_1 6496.9-9977.144131.23-7818.84**4394.09-6178.66np.exp(+-5227.68**x_1 158.81np.tan(-459.8np.exp(973.99)))) 
